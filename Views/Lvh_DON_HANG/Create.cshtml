@model LEVINHHUY_K22CNT1_2210900106.Models.DON_HANG

@{
    ViewBag.Title = "Create Order";
}

<h2>Create Order</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Đơn hàng</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.MaKH, "Khách hàng", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaKH", ViewBag.MaKH as SelectList, "Chọn khách hàng", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaKH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Ngày Đặt", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ngay_dat, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.Ngay_dat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Trạng Thái", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Trang_thai", new SelectList(new List<SelectListItem> {
                new SelectListItem { Value = "0", Text = "Chờ xử lý" },
                new SelectListItem { Value = "1", Text = "Đang giao" },
                new SelectListItem { Value = "2", Text = "Hoàn thành" }
            }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Trang_thai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Sản Phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaSP", ViewBag.MaSP as SelectList, "Chọn sản phẩm", new { @class = "form-control", id = "productDropdown" })
            @Html.ValidationMessageFor(model => model.MaSP, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.Label("Số Lượng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", type = "number", id = "quantity" } })
            @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tổng Tiền", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tong_tien, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "totalPrice" } })
            @Html.ValidationMessageFor(model => model.Tong_tien, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            function updateTotalPrice() {
                var selectedOption = $("#productDropdown").find(":selected");
                var price = parseFloat(selectedOption.data("price")) || 0; // Lấy giá từ thuộc tính data-price
                var quantity = parseInt($("#quantity").val()) || 0; // Lấy giá trị số lượng
                var totalPrice = price * quantity; // Tính tổng tiền
                $("#totalPrice").val(totalPrice.toFixed(2)); // Cập nhật tổng tiền với 2 chữ số thập phân
            }

            $("#productDropdown").change(function () {
                updateTotalPrice(); // Cập nhật tổng tiền
            });

            $("#quantity").on("input", function () {
                updateTotalPrice(); // Cập nhật tổng tiền
            });

            updateTotalPrice(); // Tính toán tổng tiền ban đầu
        });

    </script>
}
